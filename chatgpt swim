local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- GUI Setup
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "SwimGui"
gui.ResetOnSpawn = false

local swimButton = Instance.new("TextButton")
swimButton.Size = UDim2.new(0, 160, 0, 50)
swimButton.Position = UDim2.new(0.5, -80, 0.85, 0)
swimButton.BackgroundColor3 = Color3.fromRGB(10, 100, 180)
swimButton.TextColor3 = Color3.new(1, 1, 1)
swimButton.Font = Enum.Font.SourceSansBold
swimButton.TextSize = 20
swimButton.Text = "Toggle Swim"
swimButton.Parent = gui

-- Movement Tracking
local swimming = false
local swimSpeed = 35
local direction = Vector3.zero
local bodyVelocity

local keys = {
    W = false,
    A = false,
    S = false,
    D = false
}

-- Animate Swim
local function playSwimAnimation()
    if humanoid then
        humanoid:LoadAnimation(script:FindFirstChild("SwimAnim") or Instance.new("Animation", script)).AnimationId = "rbxassetid://507766388"
        local anim = humanoid:LoadAnimation(script.SwimAnim)
        anim:Play()
    end
end

-- Input Listeners (PC)
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode.Name
    if keys[key] ~= nil then keys[key] = true end
end)

UIS.InputEnded:Connect(function(input)
    local key = input.KeyCode.Name
    if keys[key] ~= nil then keys[key] = false end
end)

-- Update Direction
local function updateDirection()
    direction = Vector3.zero
    if UIS.KeyboardEnabled then
        if keys.W then direction += workspace.CurrentCamera.CFrame.LookVector end
        if keys.S then direction -= workspace.CurrentCamera.CFrame.LookVector end
        if keys.A then direction -= workspace.CurrentCamera.CFrame.RightVector end
        if keys.D then direction += workspace.CurrentCamera.CFrame.RightVector end
    elseif UIS.TouchEnabled then
        direction = player:GetMouse().Hit.LookVector
    end
end

-- Start Swimming
local function startSwimming()
    if swimming then return end
    swimming = true
    swimButton.Text = "Stop Swimming"

    -- Play swim animation
    playSwimAnimation()

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    bodyVelocity.P = 1000
    bodyVelocity.Velocity = Vector3.zero
    bodyVelocity.Parent = humanoidRootPart

    RunService.RenderStepped:Connect(function()
        if swimming then
            updateDirection()
            if direction.Magnitude > 0 then
                bodyVelocity.Velocity = direction.Unit * swimSpeed
            else
                bodyVelocity.Velocity = Vector3.zero
            end
        end
    end)
end

-- Stop Swimming
local function stopSwimming()
    if not swimming then return end
    swimming = false
    if bodyVelocity then bodyVelocity:Destroy() end
    swimButton.Text = "Toggle Swim"
end

-- Button Toggle
swimButton.MouseButton1Click:Connect(function()
    if swimming then
        stopSwimming()
    else
        startSwimming()
    end
end)

-- Add Animation Object
local swimAnim = Instance.new("Animation")
swimAnim.Name = "SwimAnim"
swimAnim.AnimationId = "rbxassetid://507766388" -- Roblox swim animation
swimAnim.Parent = script
